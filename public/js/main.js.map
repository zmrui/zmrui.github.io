{"version":3,"sources":["file:///D:/Users/zmrui/Git/zmrui.github.io/themes/cvtheme/assets/js/main.js"],"sourcesContent":["console.log('This site was generated by Hugo.');\n\n// Smooth scrolling for anchor links\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Handle all anchor links with smooth scrolling\n    const anchorLinks = document.querySelectorAll('a[href^=\"#\"]');\n    \n    anchorLinks.forEach(link =\u003e {\n        link.addEventListener('click', function(e) {\n            e.preventDefault();\n            \n            const targetId = this.getAttribute('href').substring(1);\n            const targetElement = document.getElementById(targetId);\n            \n            if (targetElement) {\n                // Close mobile outline if open\n                const mobileOutline = document.getElementById('mobile-outline');\n                if (mobileOutline) {\n                    mobileOutline.classList.add('hidden');\n                }\n                \n                // Smooth scroll to target with offset for fixed outline\n                const offsetTop = targetElement.offsetTop - 20;\n                window.scrollTo({\n                    top: offsetTop,\n                    behavior: 'smooth'\n                });\n                \n                // Add temporary highlight to the target section\n                targetElement.style.transition = 'background-color 0.3s ease';\n                targetElement.style.backgroundColor = '#f0f9ff';\n                setTimeout(() =\u003e {\n                    targetElement.style.backgroundColor = '';\n                }, 2000);\n            }\n        });\n    });\n    \n    // Mobile outline toggle functionality\n    const outlineToggle = document.getElementById('outline-toggle');\n    const outlineClose = document.getElementById('outline-close');\n    const mobileOutline = document.getElementById('mobile-outline');\n    \n    if (outlineToggle \u0026\u0026 mobileOutline) {\n        outlineToggle.addEventListener('click', function() {\n            mobileOutline.classList.remove('hidden');\n        });\n    }\n    \n    if (outlineClose \u0026\u0026 mobileOutline) {\n        outlineClose.addEventListener('click', function() {\n            mobileOutline.classList.add('hidden');\n        });\n    }\n    \n    // Close mobile outline when clicking on overlay\n    if (mobileOutline) {\n        mobileOutline.addEventListener('click', function(e) {\n            if (e.target === mobileOutline) {\n                mobileOutline.classList.add('hidden');\n            }\n        });\n    }\n    \n    // Active section highlighting in outline\n    function updateActiveSection() {\n        const sections = document.querySelectorAll('section[id]');\n        const navLinks = document.querySelectorAll('nav a[href^=\"#\"], #mobile-outline a[href^=\"#\"]');\n        \n        let currentSection = '';\n        const scrollPosition = window.scrollY + 100; // Offset for better UX\n        \n        sections.forEach(section =\u003e {\n            const top = section.offsetTop;\n            const height = section.offsetHeight;\n            \n            if (scrollPosition \u003e= top \u0026\u0026 scrollPosition \u003c top + height) {\n                currentSection = section.getAttribute('id');\n            }\n        });\n        \n        // Update active states\n        navLinks.forEach(link =\u003e {\n            link.classList.remove('bg-blue-100', 'text-blue-800', 'font-semibold');\n            link.classList.add('text-blue-600');\n            \n            if (link.getAttribute('href') === '#' + currentSection) {\n                link.classList.remove('text-blue-600');\n                link.classList.add('bg-blue-100', 'text-blue-800', 'font-semibold');\n            }\n        });\n    }\n    \n    // Update active section on scroll\n    window.addEventListener('scroll', updateActiveSection);\n    \n    // Initial call to set active section\n    updateActiveSection();\n});\n"],"mappings":";;AAAA,UAAQ,IAAI,kCAAkC;AAG9C,WAAS,iBAAiB,oBAAoB,WAAW;AAErD,UAAM,cAAc,SAAS,iBAAiB,cAAc;AAE5D,gBAAY,QAAQ,UAAQ;AACxB,WAAK,iBAAiB,SAAS,SAAS,GAAG;AACvC,UAAE,eAAe;AAEjB,cAAM,WAAW,KAAK,aAAa,MAAM,EAAE,UAAU,CAAC;AACtD,cAAM,gBAAgB,SAAS,eAAe,QAAQ;AAEtD,YAAI,eAAe;AAEf,gBAAMA,iBAAgB,SAAS,eAAe,gBAAgB;AAC9D,cAAIA,gBAAe;AACf,YAAAA,eAAc,UAAU,IAAI,QAAQ;AAAA,UACxC;AAGA,gBAAM,YAAY,cAAc,YAAY;AAC5C,iBAAO,SAAS;AAAA,YACZ,KAAK;AAAA,YACL,UAAU;AAAA,UACd,CAAC;AAGD,wBAAc,MAAM,aAAa;AACjC,wBAAc,MAAM,kBAAkB;AACtC,qBAAW,MAAM;AACb,0BAAc,MAAM,kBAAkB;AAAA,UAC1C,GAAG,GAAI;AAAA,QACX;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AAGD,UAAM,gBAAgB,SAAS,eAAe,gBAAgB;AAC9D,UAAM,eAAe,SAAS,eAAe,eAAe;AAC5D,UAAM,gBAAgB,SAAS,eAAe,gBAAgB;AAE9D,QAAI,iBAAiB,eAAe;AAChC,oBAAc,iBAAiB,SAAS,WAAW;AAC/C,sBAAc,UAAU,OAAO,QAAQ;AAAA,MAC3C,CAAC;AAAA,IACL;AAEA,QAAI,gBAAgB,eAAe;AAC/B,mBAAa,iBAAiB,SAAS,WAAW;AAC9C,sBAAc,UAAU,IAAI,QAAQ;AAAA,MACxC,CAAC;AAAA,IACL;AAGA,QAAI,eAAe;AACf,oBAAc,iBAAiB,SAAS,SAAS,GAAG;AAChD,YAAI,EAAE,WAAW,eAAe;AAC5B,wBAAc,UAAU,IAAI,QAAQ;AAAA,QACxC;AAAA,MACJ,CAAC;AAAA,IACL;AAGA,aAAS,sBAAsB;AAC3B,YAAM,WAAW,SAAS,iBAAiB,aAAa;AACxD,YAAM,WAAW,SAAS,iBAAiB,gDAAgD;AAE3F,UAAI,iBAAiB;AACrB,YAAM,iBAAiB,OAAO,UAAU;AAExC,eAAS,QAAQ,aAAW;AACxB,cAAM,MAAM,QAAQ;AACpB,cAAM,SAAS,QAAQ;AAEvB,YAAI,kBAAkB,OAAO,iBAAiB,MAAM,QAAQ;AACxD,2BAAiB,QAAQ,aAAa,IAAI;AAAA,QAC9C;AAAA,MACJ,CAAC;AAGD,eAAS,QAAQ,UAAQ;AACrB,aAAK,UAAU,OAAO,eAAe,iBAAiB,eAAe;AACrE,aAAK,UAAU,IAAI,eAAe;AAElC,YAAI,KAAK,aAAa,MAAM,MAAM,MAAM,gBAAgB;AACpD,eAAK,UAAU,OAAO,eAAe;AACrC,eAAK,UAAU,IAAI,eAAe,iBAAiB,eAAe;AAAA,QACtE;AAAA,MACJ,CAAC;AAAA,IACL;AAGA,WAAO,iBAAiB,UAAU,mBAAmB;AAGrD,wBAAoB;AAAA,EACxB,CAAC;","names":["mobileOutline"]}